package meme_service

import (
	"testing"

	"github.com/stretchr/testify/assert"

	r "meme/redis"
)

/*
redis client is not injected (dependency injection), hence
1. redis needs to be running with the relevant data.
2. error scenarios generated by redis are not tested.
*/
func TestGetMemeForExistingId(t *testing.T) {
	client := r.ConnectToRedis()

	val, err := GetMeme(client, "1", "lat", "lon", "query")
	assert.Nil(t, err)
	assert.Equal(t, "1_lat_lon_query", val)
}

func TestGetBalanceExistingId(t *testing.T) {
	// in redis keys "2" and "2_count" exist
	client := r.ConnectToRedis()

	val, err := GetTokenBalance(client, "2")
	assert.Nil(t, err)
	assert.Equal(t, 1, val)
}

func TestGetBalanceExistingIdYetToCallMemeAPI(t *testing.T) {
	// in redis key "3" exists but "3_count" doesn't
	client := r.ConnectToRedis()

	val, err := GetTokenBalance(client, "3")
	assert.Nil(t, err)
	assert.Equal(t, 1, val)
}

func TestGetBalanceForNonExistingId(t *testing.T) {
	client := r.ConnectToRedis()

	val, err := GetTokenBalance(client, "200")
	assert.NotNil(t, err)
	assert.Equal(t, -1, val)
}
